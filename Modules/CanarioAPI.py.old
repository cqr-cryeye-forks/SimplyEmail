#!/usr/bin/env python
# -*- coding: utf-8 -*-

import configparser
from Helpers import Parser, helpers, CanarioAPI


class ClassName(object):
    def __init__(self, domain, verbose=False):
        self.name = "Canar.io API PasteBin search"
        self.description = "Search Canar.io for paste potential data dumps, this can take a bit but a great source"
        self.domain = domain
        self.verbose = verbose
        self.Html = ""

        config = configparser.ConfigParser()
        config.read('Common/SimplyEmail.ini')

        try:
            self.Depth = int(config['CanaryPasteBin']['PageDepth'])
            self.Counter = int(config['CanaryPasteBin']['QueryStart'])
            self.apikeyv = config['APIKeys']['Canario']
        except KeyError as e:
            print(helpers.color(f" [*] Major Settings for Canar.io Search are missing, EXITING! {e}\n", warning=True))

    def execute(self):
        self.process()
        return self.get_emails()

    def process(self):
        try:
            c = CanarioAPI.Canary(api_key=self.apikeyv)
            s = c.search(self.domain)

            if s.get('data', {}).get('error_msg'):
                error = s['data']['error_msg']
                print(helpers.color(f" [!] Check your key and Canar.io limit: {error}", warning=True))
                return

            if s.get('action_valid', 'false').lower() == 'true':
                if self.verbose:
                    print(helpers.color(' [*] Canario query valid!'))

                count = int(s['data']['results']['count'])
                if self.verbose:
                    print(helpers.color(f' [*] Canario result count: {count}', firewall=True))

                if count > 0:
                    refid = [result['referenceid'] for result in s['data']['results']['results']]
                    for ref in refid:
                        if self.verbose:
                            print(helpers.color(f' [*] Now enumerating refid: {ref}', firewall=True))

                        view = c.view(ref)
                        emails = view['data']['objects'].get('email', [])
                        self.Html += " ".join(emails) + " "

                        body = view['data']['text_data'].get('body', "")
                        self.Html += body + " "

            else:
                print(helpers.color(" [!] Invalid Canar.io query", warning=True))

        except Exception as e:
            print(helpers.color(f' [!] Check your Canario API key: {e}', warning=True))

    def get_emails(self):
        parser = Parser.Parser(self.Html)
        parser.generic_clean()
        parser.url_clean()
        final_output = parser.grep_find_emails()
        html_results = parser.build_results(final_output, self.name)
        json_results = parser.build_json(final_output, self.name)
        return final_output, html_results, json_results
