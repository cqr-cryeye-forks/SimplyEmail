#!/usr/bin/env python

import requests
import configparser
from Helpers import helpers, Parser


class ClassName:
    def __init__(self, domain, verbose=False):
        self.apikey = False
        self.name = "OnInstagram Search For Instagram Users"
        self.description = "Uses OnInstagram's search engine"
        self.domain = domain
        self.html = ""
        self.verbose = verbose
        self.config = self.load_config()

    def load_config(self):
        config = configparser.ConfigParser()
        try:
            config.read('Common/SimplyEmail.ini')
            return config
        except Exception as e:
            error = " [*] Major Settings for OnInstagram are missing, EXITING!\n"
            print(helpers.color(error, warning=True))
            raise e

    def execute(self):
        self.process()
        final_output, html_results, json_results = self.get_emails()
        return final_output, html_results, json_results

    def process(self):
        url = f"http://www.oninstagram.com/profile/search?query={self.domain}"
        try:
            response = requests.get(url)
            response.raise_for_status()
            self.html = response.content
            if self.verbose:
                print(helpers.color(' [*] Instagram search complete', firewall=True))
        except requests.RequestException as e:
            error = f" [!] Major issue with OnInstagram Search: {e}"
            print(helpers.color(error, warning=True))

    def get_emails(self):
        parser = Parser.Parser(self.html)
        parser.generic_clean()
        parser.url_clean()
        final_output = parser.grep_find_emails()
        html_results = parser.build_results(final_output, self.name)
        json_results = parser.build_json(final_output, self.name)
        return final_output, html_results, json_results
